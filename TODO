                -- TODO --

* Auto-detect presence of the Pentium TSC. Currently will quietly
  produce garbage if the TSC isn't present, I think, I don't have
  a test machine.

* Multiple irqs (use keyboard, mouse, and network card).

* Query the system for irqs associated with particular devices.

* Port newest version of random.c from linux 1.3 series kernels
  (this is random.c.new).

* Ask Ted about entropy estimation.

* Does unlink() work?

* Can mount()/umount() work?

* Use the Nto ClockCycles() call to get the TSC, if this is a good
  idea.

* Implement seeking as a nul op, so "hd /dev/urandom" works.

The following would make the implementation more complete, but
aren't necessary.

* Keep the device times up to date.

* chmod(), chown() - in case you want to change this on-the-fly.

* ioctl() - random.c allows a few ioctls, I could do for complete
  Linux emulation.

* write() - Used by Linux to seed the randomness, I don't intend
  to implement this, I'm not convinced of its usefulness.

